name: Build and Deploy Extensions

on:
  push:
    branches:
      - dev
jobs:
  build-and-push-to-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Extensions with Maven
        run: mvn clean package javadoc:aggregate -U -DskipTests -Denforcer.skip
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
      - name: Extract current snapshot version
        run: echo "::set-env name=MVN_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Build and Push Docker Image pipeline-elements-all-jvm
        run: |
          COMPONENT_NAME=pipeline-elements-all-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-aggregation-flink
        run: |
          COMPONENT_NAME=processors-aggregation-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-enricher-flink
        run: |
          COMPONENT_NAME=processors-enricher-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-enricher-jvm
        run: |
          COMPONENT_NAME=processors-enricher-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-filters-jvm
        run: |
          COMPONENT_NAME=processors-filters-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-geo-jvm
        run: |
          COMPONENT_NAME=processors-geo-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-image-processing-jvm
        run: |
          COMPONENT_NAME=processors-image-processing-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-pattern-detection-flink
        run: |
          COMPONENT_NAME=processors-pattern-detection-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-filters-siddhi
        run: |
          COMPONENT_NAME=processors-filters-siddhi
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-statistics-flink
        run: |
          COMPONENT_NAME=processors-statistics-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-geo-flink
        run: |
          COMPONENT_NAME=processors-geo-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-transformation-flink
        run: |
          COMPONENT_NAME=processors-transformation-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-transformation-jvm
        run: |
          COMPONENT_NAME=processors-transformation-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
#      - name: Build and Push Docker Image processors-text-mining-flink
#        run: |
#          COMPONENT_NAME=processors-text-mining-flink
#          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
#          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
#          docker push $IMAGE_NAME
      - name: Build and Push Docker Image processors-text-mining-jvm
        run: |
          COMPONENT_NAME=processors-text-mining-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sinks-brokers-jvm
        run: |
          COMPONENT_NAME=sinks-brokers-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sinks-databases-flink
        run: |
          COMPONENT_NAME=sinks-databases-flink
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sinks-databases-jvm
        run: |
          COMPONENT_NAME=sinks-databases-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sinks-notifications-jvm
        run: |
          COMPONENT_NAME=sinks-notifications-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sinks-internal-jvm
        run: |
          COMPONENT_NAME=sinks-internal-jvm
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sources-vehicle-simulator
        run: |
          COMPONENT_NAME=sources-vehicle-simulator
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME
      - name: Build and Push Docker Image sources-watertank-simulator
        run: |
          COMPONENT_NAME=sources-watertank-simulator
          IMAGE_NAME=apachestreampipes/$COMPONENT_NAME:$MVN_VERSION
          docker build --pull -t $IMAGE_NAME ./streampipes-$COMPONENT_NAME/
          docker push $IMAGE_NAME