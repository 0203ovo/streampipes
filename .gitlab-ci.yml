variables:
  REGISTRY_HOST: ipe-wim-gitlab.fzi.de:5000
  HARBOR_REGISTRY_HOST: laus.fzi.de:8201
  IMAGE_NAME: $REGISTRY_HOST/$CI_PROJECT_PATH
  HARBOR_IMAGE_NAME: $HARBOR_REGISTRY_HOST/$CI_PROJECT_PATH
  MAVEN_CLI_OPTS: -DskipTests --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
  GIT_REPO_ORIGIN: ssh://git@ipe-wim-gitlab.fzi.de:2222
  GIT_STRATEGY: clone

stages:
  - build
  - docker
  - deploy
  - release
  - docker-hub

    #before_script:
    #- echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    #- git remote set-url origin $GIT_REPO_ORIGIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git

build:
  image: maven:3-jdk-8
  stage: build
  script:
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - mvn clean package javadoc:aggregate -DskipTests
    - export MVN_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\[')
    - "echo $MVN_VERSION >> ./target/mvn_version"
  artifacts:
    paths:
      - ./streampipes-backend/target/*.war
      - ./streampipes-pe-sinks-standalone/target/*.jar
      - ./streampipes-pe-sources-samples/target/*.jar
      - ./streampipes-pe-processors-esper/target/*.jar
      - ./streampipes-pe-sources-axoom-hmi/target/*.jar
      - ./streampipes-pe-sources-mnist/target/*.jar
      - ./streampipes-pe-mixed-flink/target/*.jar
      - ./target/site/apidocs/**
      - ./target/mvn_version
    expire_in:  1 hour
  except:
      - /release-.*$/

docker-backend:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/backend:SNAPSHOT ./streampipes-backend/
     - docker push $IMAGE_NAME/backend:SNAPSHOT
   only:
     - dev

docker-pe-sinks:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/pe-sinks-standalone:SNAPSHOT ./streampipes-pe-sinks-standalone/
     - docker push $IMAGE_NAME/pe-sinks-standalone:SNAPSHOT
   only:
     - dev
    
docker-pe-sources-samples:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/pe-sources-samples:SNAPSHOT ./streampipes-pe-sources-samples/
     - docker push $IMAGE_NAME/pe-sources-samples:SNAPSHOT
   only:
     - dev
 
docker-pe-processors-esper:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/pe-processors-esper:SNAPSHOT ./streampipes-pe-processors-esper/
     - docker push $IMAGE_NAME/pe-processors-esper:SNAPSHOT
   only:
     - dev

docker-pe-sources-axoom-hmi:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/pe-sources-axoom-hmi:SNAPSHOT ./streampipes-pe-sources-axoom-hmi/
     - docker push $IMAGE_NAME/pe-sources-axoom-hmi:SNAPSHOT
   only:
     - dev

docker-pe-sources-mnist:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/pe-sources-mnist:SNAPSHOT ./streampipes-pe-sources-mnist/
     - docker push $IMAGE_NAME/pe-sources-mnist:SNAPSHOT
   only:
     - dev

docker-pe-mixed-flink:
   image: docker:17.06.0-ce
   stage: docker
   dependencies: 
     - build
   script: 
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/pe-mixed-flink:SNAPSHOT ./streampipes-pe-mixed-flink/
     - docker push $IMAGE_NAME/pe-mixed-flink:SNAPSHOT
   only:
     - dev



deploy:
  image: maven:3-jdk-8
  stage: deploy
  script:
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - mvn deploy -DskipTests
  only:
    - dev
  artifacts:
    paths:
      - ./**/*.jar
    expire_in:  1 hour

start release:
  image: maven:3-jdk-8
  stage: release
  script:
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - git remote set-url origin $GIT_REPO_ORIGIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH")
    - mkdir ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan -p 2222 -t rsa ipe-wim-gitlab.fzi.de > ~/.ssh/known_hosts
    - git config --global user.email 'zehnder@fzi.de'
    - git config --global user.name 'zehnder'
    - git fetch
    - git checkout master
    - git checkout dev
    - mvn -B jgitflow:release-start $MAVEN_CLI_OPTS
    - git push origin --all
  only:
    - dev
  when: manual

finish release:
  image: maven:3-jdk-8
  stage: release
  script:
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - git remote set-url origin $GIT_REPO_ORIGIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH")
    - mkdir ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan -p 2222 -t rsa ipe-wim-gitlab.fzi.de > ~/.ssh/known_hosts
    - git config --global user.email 'zehnder@fzi.de'
    - git config --global user.name 'zehnder'
    - git checkout master
    - git checkout dev
    - git checkout $CI_BUILD_REF_NAME
    - mvn -B jgitflow:release-finish $MAVEN_CLI_OPTS
    - git push origin --all
    - git push origin --tags
  when: manual
  except:
    - master

docker hub:
  image: docker:17.06.0-ce
  stage: docker-hub
  when: manual
  script:
    - export MVN_VERSION=$(cat ./target/mvn_version)
    - echo $MVN_VERSION
    - docker login -u streampipesbuild -p $DOCKER_HUB_USER_PWD
    - docker build --pull -t streampipes/backend:$MVN_VERSION ./streampipes-backend/
    - docker push streampipes/backend:$MVN_VERSION
    - docker build --pull -t streampipes/backend ./streampipes-backend/
    - docker push streampipes/backend
  when: manual
  only:
    - master




