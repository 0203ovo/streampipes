# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

variables:
  IMAGE_NAME: $REGISTRY_HOST/$CI_PROJECT_PATH
  HARBOR_IMAGE_NAME: $HARBOR_REGISTRY_HOST/$CI_PROJECT_PATH
  MAVEN_CLI_OPTS: -DskipTests --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
  GIT_REPO_ORIGIN: $GIT_REPO_ORIGIN
  GIT_STRATEGY: clone

stages:
  - github
  - build
  - docker

pull github:
  image: maven:3-jdk-8
  stage: github
  script:
  - git remote set-url origin $GIT_REPO_ORIGIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
  - git remote add github https://github.com/apache/incubator-streampipes-examples.git
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH")
  - mkdir ~/.ssh
  - touch ~/.ssh/known_hosts
  - ssh-keyscan -p 2222 -t rsa $GITLAB_HOST > ~/.ssh/known_hosts
  - git config --global user.email '$USER_EMAIL'
  - git config --global user.name '$USER_NAME'
  - git checkout dev
  - git pull github dev --allow-unrelated-histories
  - git push origin --all


build:
  image: maven:3-jdk-8
  stage: build
  script:
    - echo "$GPG_PRIVATE_KEY" | gpg --batch --import --passphrase "$GPG_PASSPHRASE"
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - mvn clean package javadoc:aggregate
   # - mvn clean package javadoc:aggregate
    - export MVN_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\[')
    - "echo $MVN_VERSION >> ./target/mvn_version"
  artifacts:
    paths:
      - ./streampipes-backend/target/streampipes-backend.jar
      - ./streampipes-connect-container-master/target/streampipes-connect-container-master.jar
      - ./target/site/apidocs/**
      - ./target/mvn_version
    expire_in:  1 week
  except:
      - /release-.*$/

build-ui:
  image: node:8-alpine
  stage: build
  script:
    - cd ui
    - export NODE_PATH=/cache/node_modules
    - export NODE_OPTIONS=--max_old_space_size=4096
    - npm install --unsafe-perm
    - npm run build
  artifacts:
    paths:
      - ui/dist/assets/css/
      - ui/dist/assets/img/
      - ui/dist/assets/lib/
      - ui/dist/assets/templates/
      - ui/dist/assets/fonts/
      - ui/dist/index.html
      - ui/dist/main.bundle.js
      - ui/dist/main.bundle.js.gz
      - ui/dist/polyfills.bundle.js
      - ui/dist/polyfills.bundle.js.gz
      - ui/dist/style.bundle.css
      - ui/dist/style.bundle.css.gz
      - ui/dist/style.bundle.js
      - ui/dist/style.bundle.js.gz
      - ui/dist/style.css
      - ui/dist/style.css.gz
    expire_in: 1 hour
  only:
    - dev

docker-ui:
  image: docker:17.06.0-ce
  stage: docker
  dependencies:
    - build
    - build-ui
  script:
    - export MVN_VERSION=$(cat ./target/mvn_version)
    - apk update
    - apk add curl
    - apk add unzip
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
    - docker login -u $USER_NAME -p $HARBOR_PASSWORD $HARBOR_REGISTRY_HOST
    - docker build --no-cache --pull -t $HARBOR_IMAGE_NAME/ui:$MVN_VERSION -t $IMAGE_NAME/ui:$MVN_VERSION ./ui
    - docker push $IMAGE_NAME/ui:$MVN_VERSION
    - docker push $HARBOR_IMAGE_NAME/ui:$MVN_VERSION

docker-backend:
   image: docker:17.06.0-ce
   stage: docker
   dependencies:
     - build
   script:
     - export MVN_VERSION=$(cat ./target/mvn_version)
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker login -u $USER_NAME -p $HARBOR_PASSWORD $HARBOR_TEGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/backend:latest -t $IMAGE_NAME/backend:$MVN_VERSION -t $HARBOR_IMAGE_NAME/backend:latest -t $HARBOR_IMAGE_NAME/backend:$MVN_VERSION ./streampipes-backend/
     - docker push $IMAGE_NAME/backend:$MVN_VERSION
     - docker push $IMAGE_NAME/backend:latest
     - docker push $HARBOR_IMAGE_NAME/backend:$MVN_VERSION
     - docker push $HARBOR_IMAGE_NAME/backend:latest
   only:
     - dev

docker-connect-container:
   image: docker:17.06.0-ce
   stage: docker
   dependencies:
     - build
   script:
     - export MVN_VERSION=$(cat ./target/mvn_version)
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker login -u $USER_NAME -p $HARBOR_PASSWORD $HARBOR_REGISTRY_HOST
     - docker build --pull -t $IMAGE_NAME/streampipes-connect-container:latest -t $IMAGE_NAME/streampipes-connect-container:$MVN_VERSION -t $HARBOR_IMAGE_NAME/streampipes-connect-container:latest -t $HARBOR_IMAGE_NAME/streampipes-connect-container:$MVN_VERSION ./streampipes-connect-container-master/
     - docker push $IMAGE_NAME/streampipes-connect-container:$MVN_VERSION
     - docker push $IMAGE_NAME/streampipes-connect-container:latest
     - docker push $HARBOR_IMAGE_NAME/streampipes-connect-container:$MVN_VERSION
     - docker push $HARBOR_IMAGE_NAME/streampipes-connect-container:latest
   only:
     - dev

