variables:
  IMAGE_NAME: $REGISTRY_HOST/$CI_PROJECT_PATH
  DOCKER_HUB_IMAGE_NAME: streampipes
  MAVEN_CLI_OPTS: -DskipTests --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
  HARBOR_IMAGE_NAME: $HARBOR_REGISTRY_HOST/$CI_PROJECT_PATH
  GIT_STRATEGY: clone


stages:
  - build
  - docker
  - deploy
  - release
  - github
  - docker-hub

build:
  image: maven:3.6.1-jdk-8
  stage: build
  script:
#    - echo "$GPG_PRIVATE_KEY" | gpg --batch --import --passphrase "$GPG_PASSPHRASE"
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - mvn clean package javadoc:aggregate -U -DskipTests
    - export MVN_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\[')
    - "echo $MVN_VERSION >> ./target/mvn_version"
  artifacts:
    paths:
      - /release-.*$/
      - ./streampipes-connect-container/target/*.jar
      - ./*/target/*.jar
      - ./target/mvn_version
    expire_in:  1 hour


docker-connect-container:
   image: docker:17.06.0-ce
   stage: docker
   dependencies:
     - build
   script:
     - export MVN_VERSION=$(cat ./target/mvn_version)
     - cd streampipes-connect-adapter/
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $REGISTRY_HOST
     - docker login -u zehnder -p $HARBOR_PASSWORD ipe-harbor.fzi.de
     - docker build --pull -t $IMAGE_NAME/streampipes-connect-worker:latest -t $IMAGE_NAME/streampipes-connect-worker:$MVN_VERSION -t $HARBOR_IMAGE_NAME/streampipes-connect-worker:latest -t $HARBOR_IMAGE_NAME/streampipes-connect-worker:$MVN_VERSION .
     - docker push $IMAGE_NAME/streampipes-connect-worker:$MVN_VERSION
     - docker push $IMAGE_NAME/streampipes-connect-worker:latest
     - docker push $HARBOR_IMAGE_NAME/streampipes-connect-worker:$MVN_VERSION
     - docker push $HARBOR_IMAGE_NAME/streampipes-connect-worker:latest
   only:
     - dev

deploy:
  image: maven:3-jdk-8
  stage: deploy
  script:
    - echo "$GPG_PRIVATE_KEY" | gpg --batch --import --passphrase "$GPG_PASSPHRASE"
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - mvn deploy -DskipTests
  only:
    - dev
  artifacts:
    paths:
      - ./**/*.jar
    expire_in:  1 hour

github:
  image: maven:3-jdk-8
  stage: github
  script:
    - git config --global user.email 'zehnder@fzi.de'
    - git config --global user.name 'zehnder'
    - git checkout $CI_COMMIT_REF_NAME
    - git pull
    - git remote add github https://$GITHUB_TOKEN:x-oauth-basic@github.com/streampipes/streampipes-connect-adapters.git
    - git push github $CI_COMMIT_REF_NAME
  only:
    - dev
    - master

start release:
  image: maven:3-jdk-8
  stage: release
  script:
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - git remote set-url origin $GIT_REPO_ORIGIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH")
    - mkdir ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan -p 2222 -t rsa ipe-wim-gitlab.fzi.de > ~/.ssh/known_hosts
    - git config --global user.email 'zehnder@fzi.de'
    - git config --global user.name 'zehnder'
    - git fetch
    - git checkout master
    - git checkout dev
    - mvn -B jgitflow:release-start $MAVEN_CLI_OPTS -Drelease=true
    - git push origin --all
  only:
    - dev
  when: manual

finish release:
  image: maven:3-jdk-8
  stage: release
  script:
    - export MVN_VERSION=$(cat ./target/mvn_version)
    - echo "$GPG_PRIVATE_KEY" | gpg --batch --import --passphrase "$GPG_PASSPHRASE"
    - echo "$MAVEN_CREDENTIALS" > /root/.m2/settings.xml
    - git remote set-url origin $GIT_REPO_ORIGIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
    - git remote add github https://$GITHUB_TOKEN:x-oauth-basic@github.com/streampipes/streampipes.git
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH")
    - mkdir ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan -p 2222 -t rsa ipe-wim-gitlab.fzi.de > ~/.ssh/known_hosts
    - git config --global user.email 'zehnder@fzi.de'
    - git config --global user.name 'zehnder'
    - git checkout master
    - git checkout dev
    - git checkout $CI_BUILD_REF_NAME
    - mvn -B jgitflow:release-finish $MAVEN_CLI_OPTS -Drelease=true
    - git push origin --all
    - git push origin --tags
    - git checkout master
    - git push github master
    - git push github $MVN_VERSION
    - git checkout dev
    - git push github dev
  when: manual
  except:
    - master

docker hub:
  image: docker:17.06.0-ce
  stage: docker-hub
  when: manual
  script:
    - export MVN_VERSION=$(cat ./target/mvn_version)
    - docker login -u streampipesbuild -p $DOCKER_HUB_USER_PWD
    - docker build --pull -t streampipes/backend:$MVN_VERSION ./streampipes-backend/
    - docker push streampipes/backend:$MVN_VERSION
    - docker build --pull -t streampipes/backend ./streampipes-backend/
    - docker push streampipes/backend
    - docker build --pull -t streampipes/streampipes-connect-worker:latest -t streampipes/streampipes-connect-worker:$MVN_VERSION .
    - docker push streampipes/streampipes-connect-worker:$MVN_VERSION
    - docker push streampipes/streampipes-connect-worker:latest
  only:
    - master


