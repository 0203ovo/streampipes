#!/usr/bin/env bash
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
set -e
. "$STREAMPIPES_WORKDIR/bin/common"

DEPLOY_MODE="dev"

cli_help_start() {
  cat <<EOF
Start StreamPipes environment

Usage: streampipes start [OPTIONS]

Examples:
streampipes start
streampipes start --user

Options:
  -d, --dev     Map docker service ports to host in dev mode (default)
  -u, --user    No docker service ports mapped to host (user mode)
EOF

  exit 1
}

[ "$1" == '--help' ] || [ "$1" == '-h' ] && cli_help_start

if [ "$#" -gt 1 ]; then
    fatal "Illegal number of arguments, see 'streampipes ${0##*/} --help'"
fi

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -d|--dev) DEPLOY_MODE="dev"; shift ;;
        -u|--user) DEPLOY_MODE="user"; shift ;;
        -*|--*=) fatal "Unsupported flag $1, see 'streampipes ${0##*/} --help'" >&2 ;;
        *) fatal "Wrong usage, see 'streampipes ${0##*/} --help'" ;;
    esac
done

configure(){

  if [ ! -f "$STREAMPIPES_WORKDIR/.environment" ]; then
    fatal "Environment missing. See 'streampipes template'"
  fi

  startup_notice
  get_curr_environment

  info "Version: $(cat $STREAMPIPES_WORKDIR/VERSION)"

  if [ "$DEPLOY_MODE" == "dev" ]; then
    info "Environment: '$curr_environment'"
    info "Mode: '$DEPLOY_MODE'"
  elif [ "$DEPLOY_MODE" == "user" ]; then
    info "Environment: '$curr_environment'"
    info "Mode: '$DEPLOY_MODE'"
  fi

  if [ ! -f "$STREAMPIPES_WORKDIR/.env" ]; then
    info "Configure $STREAMPIPES_WORKDIR/.env"
    sed "s/##VERSION##/$(cat $STREAMPIPES_WORKDIR/VERSION)/g" \
        $STREAMPIPES_WORKDIR/bin/templates/env.template > $STREAMPIPES_WORKDIR/.env
  fi
}

create_docker_network() {
	if [ ! "$(docker network ls | grep spnet)" ]; then
    subnet=$(sed -n 's/^SP_SUBNET=//p' $STREAMPIPES_WORKDIR/.env)
	  info "Creating docker network 'spnet'"
	  run "docker network create --driver=bridge --subnet=$subnet spnet" > /dev/null 2>&1
	else
	  info "Docker network 'spnet' already exists. Continuing"
	fi
}

start_environment(){
  configure
  concatenate_compose_files $DEPLOY_MODE
  create_docker_network
  info "Creating docker volumes and starting docker containers"
  run "$docker_compose_files up -d"
  deployment_notice
}

start_environment
