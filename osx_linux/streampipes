#!/bin/bash
if [ -z "$1" ] || [ "$#" -lt 1 ]; 
then
	echo "Use 'streampipes start' to start StreamPipes, 'streampipes stop' to stop it, and 'streampipes clean' to remove streampipes."
	exit 1
fi

if [ $1 = "start" ];
then
	if [ -z "$2" ] || [ $2 = "desktop" ];
	then
		curl https://raw.githubusercontent.com/streampipes/preview-docker/master/desktop/docker-compose.yml > ./tmpl-docker-compose.yml

	else
		if [ $2 = "bigdata" ];
		then
			curl https://raw.githubusercontent.com/streampipes/preview-docker/master/big-data/docker-compose.yml > ./tmpl-docker-compose.yml

		else
			echo "Wrong starting command. Use 'streampipes start desktop' or 'streampipes start bigdata'"
			exit 1
		fi
	fi


	if [ ! -f ./tmpl-docker-compose.yml ]; then
		curl https://raw.githubusercontent.com/streampipes/preview-docker/master/docker-compose.yml > ./tmpl-docker-compose.yml
	fi

	if command -v ip;
	then
		# If Unix
		#        ip=$(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -1)
		rawip=$(ip address list | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')

		rawip=`echo $rawip | sed 's/(%s)*\n/ /g'`
		IFS=' ' declare -a 'allips=($rawip)'

		allips+=( 'Enter IP manually' )

		echo ''
		echo 'Please select your IP address or add one manually: '
		PS3='Select option: '
		select opt in "${allips[@]}"
		do
		if [ -z "${opt}" ];
			then 
				echo "Wrong input select one of the options"; 
			else
				ip="$opt"

				if [ "$opt" == "Enter IP manually" ];
				then
					read -p "Enter Ip: " ip
				fi
				break
			fi
		done

	else
		# If Windows
		ip=$(ipconfig | grep -Eo '(IPv4.*)' | grep -Eo '([0-9]*\.){3}[0-9]*' | tail -1)
		# Workaround for Kafka (https://github.com/docker/for-win/issues/1829)
		export COMPOSE_CONVERT_WINDOWS_PATHS=1
	fi

	sed "s/###TODO ADD HOSTNAME HERE ###/${ip}/g" ./tmpl-docker-compose.yml > ./docker-compose.yml


	# Remove old containers
	docker-compose stop
	yes Y | docker-compose down -v

	docker-compose pull

	docker-compose up -d

	if [ $? -eq 0 ]; then
		echo "StreamPipes successfully started. Open Browser and navigate to 'localhost'"
	else
		echo "ERROR: There was a problem while starting StreamPipes"
	fi

else
	if [ $1 = "stop" ] || [ $1 = "clean" ];
	then
		docker-compose stop
		yes Y | docker-compose down -v

		echo "StreamPipes successfully stopped"

		if [ $1 = "clean" ];
		then
			rm ./docker-compose.yml
			rm ./tmpl-docker-compose.yml
			rm -r ./config/
			echo "All StreamPipes System informations were deleted. The system can now be installed again."
		fi

	else
		echo "Command '$1' is not supported! Use 'streampipes start' to start StreamPipes, 'streampipes stop' to stop it, and 'streampipes clean' to remove streampipes."
	fi

fi

