package de.fzi.cep.sepa.sources.samples.wunderbar;

import java.util.ArrayList;
import java.util.List;

import de.fzi.cep.sepa.desc.declarer.EventStreamDeclarer;
import de.fzi.cep.sepa.desc.declarer.SemanticEventProducerDeclarer;
import de.fzi.cep.sepa.model.impl.graph.SepDescription;

public class WunderbarProducer implements SemanticEventProducerDeclarer {

	@Override
	public SepDescription declareModel() {
		SepDescription sep = new SepDescription("source-wunderbar", "Wunderbar Sensor Bar", "Provides streams generated by Wunderbar IoT sensors");
		
		return sep;
	}

	@Override
	public List<EventStreamDeclarer> getEventStreams() {
		List<EventStreamDeclarer> streams = new ArrayList<>();
		streams.add(new AccelerometerStream());
		streams.add(new AngularSpeedStream());
		streams.add(new ColorStream());
		streams.add(new HumidityStream());
		streams.add(new LuminosityStream());
		streams.add(new NoiseLevelStream());
		streams.add(new ProximityStream());
		streams.add(new TemperatureStream());
		return streams;
	}

}
